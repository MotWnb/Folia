name: Build Folia

on:
  schedule:
    - cron: '0 0 * * *' # Run every hour
  workflow_dispatch: # Allow manual execution

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Git Repository
        uses: actions/checkout@v3
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Configure Git User Details
        run: git config --global user.email "actions@github.com" && git config --global user.name "Github Actions"
      - name: Apply Patches
        run: ./gradlew applyPatches
      - name: Build
        run: ./gradlew build
      
      - name: Find Build Artifacts
        id: find_artifacts
        run: echo ::set-output name=artifact_path::$(find . -type f -wholename './build/*.jar')

      - name: Upload build artifacts
        uses: echapmanFromBunnings/upload-artifact@3.0.0
        with:
          name: folia-build
          path: ${{ steps.find_artifacts.outputs.artifact_path }}

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1.14.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: v${{ github.run_number }}
          name: Folia Build v${{ github.run_number }}
          draft: false
          prerelease: false
          generateReleaseNotes: false
          makeLatest: legacy
          omitBody: false
          omitBodyDuringUpdate: false
          omitDraftDuringUpdate: false
          omitName: false
          omitNameDuringUpdate: false
          omitPrereleaseDuringUpdate: false
          removeArtifacts: false
          replacesArtifacts: true
          skipIfReleaseExists: false
          token: ${{ secrets.GITHUB_TOKEN }}
          updateOnlyUnreleased: false

      - name: Setup Debug Session
        uses: csexton/debugger-action@master
         
      - name: Upload Release Asset
        uses: tanyagray/action-upload-release-asset@v1.1.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.find_artifacts.outputs.artifact_path }}
          asset_name: ${{ steps.find_artifacts.outputs.artifact_path }}
          asset_content_type: application/java-archive

